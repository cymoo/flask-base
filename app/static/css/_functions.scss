@charset "UTF-8";

// Convert other types to string
@function g-stringify($value) {
  @return '' + $value
}

@function g-black($opacity){
  @return rgba(0,0,0,$opacity)
}

@function g-white($opacity){
  @return rgba(255,255,255,$opacity)
}

// TODO: find a better place
@function breakpoint-suffix($name, $breakpoints: $grid-breakpoints) {
  @return if(breakpoint-min($name, $breakpoints) == null, "", "--#{$name}");
}

// 为数值则添加单位；数值无单位，视其为px，并将其转为rem
// TODO: 待扩展
@function g-add-unit($number, $unit: rem) {
  @if unitless($number) {
    @if $unit == rem {
      @return 1rem * ($number / 14)
    } @else if $unit == px {
      @return 1px * $number
    }
  }
  @return $number
}

// Replace `$search` with `$replace` in `$string`
@function g-str-replace($string, $search, $replace: "") {
  @if type-of($string) != 'string' {
    $string: g-stringify($string);
  }
  $index: str-index($string, $search);
  @if $index {
    @return str-slice($string, 1, $index - 1) + $replace + g-str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
  }
  @return $string;
}

@function g-color($key: 'primary') {
  @return map-get($colors, $key);
}